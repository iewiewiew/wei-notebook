version: "2.1"
services:
  ms-server:
    image: ${MS_PREFIX}/metersphere:${MS_TAG}
    container_name: ms-server
    environment:
      HOST_HOSTNAME: $HOSTNAME
      SPRING_DATASOURCE_URL: jdbc:mysql://${MS_MYSQL_HOST}:${MS_MYSQL_PORT}/${MS_MYSQL_DB}?autoReconnect=false&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
      SPRING_DATASOURCE_USERNAME: ${MS_MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MS_MYSQL_PASSWORD}
      KAFKA_PARTITIONS: 4
      KAFKA_REPLICAS: 1
      KAFKA_TOPIC: ${MS_KAFKA_TOPIC}
      KAFKA_LOG_TOPIC: ${MS_KAFKA_LOG_TOPIC}
      KAFKA_TEST_TOPIC: ${MS_KAFKA_TEST_TOPIC}
      KAFKA_BOOTSTRAP-SERVERS: ${MS_KAFKA_EXT_HOST}:${MS_KAFKA_EXT_PORT}
      JMETER_IMAGE: ${MS_PREFIX}/jmeter-master:${MS_JMETER_TAG}
      SESSION_TIMEOUT: 21600
    ports:
      - ${MS_PORT}:8081
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "8081"]
      interval: 6s
      timeout: 10s
      retries: 20
    volumes:
      - ms-conf:/opt/metersphere/conf
      - ms-logs:/opt/metersphere/logs
      - ms-data:/opt/metersphere/data
#    mem_limit: 1024m
    networks:
      - ms-network
#MS_EXTERNAL_MYSQL=false      
    depends_on:
      mysql:
        condition: service_healthy

  ms-data-streaming:
    image: ${MS_PREFIX}/ms-data-streaming:${MS_TAG}
    container_name: ms-data-streaming
    environment:
      HOST_HOSTNAME: $HOSTNAME
      SPRING_DATASOURCE_URL: jdbc:mysql://${MS_MYSQL_HOST}:${MS_MYSQL_PORT}/${MS_MYSQL_DB}?autoReconnect=false&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
      SPRING_DATASOURCE_USERNAME: ${MS_MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MS_MYSQL_PASSWORD}
      KAFKA_PARTITIONS: 4
      KAFKA_REPLICAS: 1
      KAFKA_TOPIC: ${MS_KAFKA_TOPIC}
      KAFKA_LOG_TOPIC: ${MS_KAFKA_LOG_TOPIC}
      KAFKA_TEST_TOPIC: ${MS_KAFKA_TEST_TOPIC}
      KAFKA_BOOTSTRAP-SERVERS: ${MS_KAFKA_HOST}:${MS_KAFKA_PORT}
    ports:
      - 8084:8084
      - 8085:8085
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "8084"]
      interval: 6s
      timeout: 10s
      retries: 20
    restart: on-failure
    volumes:
      - ./conf/metersphere.properties:/opt/metersphere/conf/metersphere.properties
      - ${MS_BASE}/metersphere/logs/data-streaming:/opt/metersphere/logs/data-streaming
    networks:
      - ms-network
#MS_EXTERNAL_KAFKA=false      
    depends_on:
      kafka:
        condition: service_healthy
